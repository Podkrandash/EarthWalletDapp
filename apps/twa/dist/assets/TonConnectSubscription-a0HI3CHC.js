import{a$ as w,eL as v,eM as C,eN as I,eO as N,r,c as q,bE as x,eP as B,eQ as D,eR as K,eS as O,j as f,eT as P}from"./index-DR6GvvU1.js";import{s as y,b as j,c as W,a as k,d as J,t as L}from"./tonConnect-25AF41UN.js";const _=()=>w(async({request:{connection:e,id:n},boc:t})=>{const u=t?v(n,t):C(n);await y({response:u,sessionKeyPair:e.sessionKeyPair,clientSessionId:e.clientSessionId})}),U=async({connection:e,request:{id:n,method:t}})=>{await y({response:N(n,t),sessionKeyPair:e.sessionKeyPair,clientSessionId:e.clientSessionId})},b=async({connection:e,request:{id:n}})=>{await y({response:I(n),sessionKeyPair:e.sessionKeyPair,clientSessionId:e.clientSessionId})},$=()=>w(U),m="TK_WEB::TON_CONNECT",Q=()=>{var R;const[e,n]=r.useState(void 0),t=q(),u=x(),{data:o}=j(),{data:p}=W(),{mutateAsync:T}=k(),{mutate:S}=$(),{mutateAsync:A}=_();B((R=e==null?void 0:e.connection)==null?void 0:R.manifest);const{mutateAsync:E}=D();r.useEffect(()=>{const a=s=>{switch(s.request.method){case"disconnect":return T(s.connection).then(()=>b({...s}));case"sendTransaction":{n(void 0);const i={connection:s.connection,id:s.request.id,payload:JSON.parse(s.request.params[0])},d=o==null?void 0:o.find(h=>h.connections.some(g=>g.clientSessionId===s.connection.clientSessionId));d?E(d.wallet.rawAddress).then(()=>setTimeout(()=>{n(i)},100)):setTimeout(()=>{n(i)},100);return}default:return S(s)}},{notifications:c}=t;(async()=>{if(c&&o)try{if(await c.subscribed(u.rawAddress))for(const i of o.flatMap(d=>d.connections))await c.subscribeTonConnect(i.clientSessionId,new URL(i.manifest.url).host)}catch(s){s instanceof Error&&t.topMessage(s.message)}})();const l=J({storage:t.storage,handleMessage:a,connections:o==null?void 0:o.flatMap(s=>s.connections),lastEventId:p});return()=>{l()}},[t,o,p,T,n,S]);const M=r.useCallback(async a=>{if(e){try{await A({request:e,boc:a})}finally{n(void 0)}K(m,JSON.stringify({event:"close-tx-confirmation",id:e.id}))}},[e,A,n]);return r.useEffect(()=>{if(e)return O(m,a=>{const c=JSON.parse(a);c.id===e.id&&c.event==="close-tx-confirmation"&&n(void 0)})},[e]),r.useEffect(()=>L.subscribe(a=>{(Array.isArray(a)?a:[a]).forEach((l,s)=>b({connection:l,request:{id:(Date.now()+s).toString()}}))}),[]),f.jsx(f.Fragment,{children:f.jsx(P,{params:(e==null?void 0:e.payload)??null,handleClose:M})})};export{Q as default};
